Closure I0
P' → · P
P → · B
B → · S
B → · S B
S → · D
S → · I
S → · W
D → · var id = E
I → · if (C) { B }
W → · while (C) { B }

Goto (I0, P) -> I1
P' → P · 

Goto (I0, B) -> I2
P → B ·

Goto (I0, S) -> I3
B → S ·
B → S · B
B → · S
B → · S B
S → · D
S → · I
S → · W
D → · var id = E
I → · if (C) { B }
W → · while (C) { B }

Goto (I0, D) -> I4
S → D ·

Goto (I0, I) -> I5
S → I ·

Goto (I0, W) -> I6
S → W ·

Goto (I0, var) -> I7
D → var · id = E

Goto (I0, if) -> I8
I → if · (C) {B}

Goto (I0, while) -> I9
W → while · (C) {B}

Goto (I3, B) -> I10
B → S B ·

Goto (I3, S) -> I3
B → S ·
B → S · B
… lo mismo que en I3

Goto (I3, D) -> I4
S → D ·

Goto (I3, I) -> I5
S → I ·

Goto (I3, W) -> I6
S → W ·

Goto (I3, var) -> I7
D → var · id = E

Goto (I3, if) -> I8
I → if · (C) {B}

Goto (I3, while) -> I9
W → while · (C) {B}

Goto (I7, id) -> I11
D → var id · = E

Goto (I8, ‘(’) -> I12
I → if (· C) {B}
C → · id == id
C → · id != id
C → · id > id
C → · id < id

Goto (I9, ‘(’) -> I13
W → while (· C) {B}
C → · id == id
C → · id != id
C → · id > id
C → · id < id

Goto (I11, =) -> I14
D → var id = · E
E → · T + E
E → · T – E
E → · T
T → · F * T
T → · F / T
T → · F
F → · number
F → · id
F → · (E) 

Goto (I12, C) -> I15
I → if (C · ) {B}

Goto (I12, id) -> I16
C → id · == id
C → id · != id
C → id · > id
C → id · < id 

Goto (I13, C) -> I17
W → while (C · ) {B}

Goto (I13, id) -> I16
C → id · == id
C → id · != id
C → id · > id
C → id · < id

Goto (I14, E) -> I18
D → var id = E ·

Goto (I14, T) -> I19
E → T · + E
E → T · – E
E → T ·

Goto (I14, F) -> I20
T → F · * T
T → F · / T
T → F ·

Goto (I14, number) -> I21
F → number ·

Goto (I14, id) -> I22
F → id ·

Goto (I14, ‘(’) -> I23
F → ( · E)
E → · T + E
E → · T – E
E → · T
T → · F * T
T → · F / T
T → · F
F → · number
F → · id
F → · (E)

Goto (I15, ‘)’) -> I24
I → if (C) · {B}

Goto (I16, ==) -> I25
C → id == · id

Goto (I16, !=) -> I26
C → id != · id

Goto (I16, >) -> I27
C → id > · id

Goto (I16, <) -> I28
C → id < · id

Goto (I17, ‘)’) -> I29
W → while (C) · {B}

Goto (I19, +) -> I30
E → T + · E
E → · T + E
E → · T – E
E → · T
T → · F * T
T → · F / T
T → · F
F → · number
F → · id
F → · (E)

Goto (I19, -) -> I31
E → T - · E
E → · T + E
E → · T – E
E → · T
T → · F * T
T → · F / T
T → · F
F → · number
F → · id
F → · (E)

Goto (I20, *) -> I32
T → F * · T
T → · F * T
T → · F / T
T → · F
F → · number
F → · id
F → · (E)

Goto (I20, /) -> I33
T → F / · T
T → · F * T
T → · F / T
T → · F
F → · number
F → · id
F → · (E)

Goto (I23, E) -> I34
F → (E · )

Goto (I23, T) -> I19

Goto (I23, F) -> I20

Goto (I23, number) -> I21

Goto (I23, id) -> I22

Goto (I23, ‘(’) -> I23

Goto (I24, {) -> I35
I → if (C) { · B}
B → · S
B → · S B
S → · D
S → · I
S → · W
D → · var id = E
I → · if (C) { B }
W → · while (C) { B }

Goto (I25, id) -> I36
C → id == id ·

Goto (I26, id) -> I37
C → id != id ·

Goto (I27, id) -> I38
C → id > id ·

Goto (I28, id) -> I39
C → id < id ·

Goto (I29, {) -> I40
W → while (C) { · B}
B → · S
B → · S B
S → · D
S → · I
S → · W
D → · var id = E
I → · if (C) { B }
W → · while (C) { B }

Goto (I30, E) -> I41
E → T + E ·

Goto (I30, T) -> I19

Goto (I30, F) -> I20

Goto (I30, number) -> I21

Goto (I30, id) -> I22

Goto (I30, ‘(’) -> I23

Goto (I31, E) -> I42
E → T - E ·

Goto (I31, T) -> I19

Goto (I31, F) -> I20

Goto (I31, number) -> I21

Goto (I31, id) -> I22

Goto (I31, ‘(’) -> I23

Goto (I32, T) -> I43
T → F * T ·

Goto (I32, F) -> I20

Goto (I32, number) -> I21

Goto (I32, id) -> I22

Goto (I32, ‘(’) -> I23

Goto (I33, T) -> I44
T → F / T ·

Goto (I33, F) -> I20

Goto (I33, number) -> I21

Goto (I33, id) -> I22

Goto (I33, ‘(’) -> I23

Goto (I34, ‘)’) -> I45
F → (E) ·

Goto (I35, B) -> I46
I → if (C) {B · }

Goto (I35, S) -> I3

Goto (I35, D) -> I4

Goto (I35, I) -> I5

Goto (I35, W) -> I6

Goto (I35, var) -> I7

Goto (I35, if) -> I8

Goto (I35, while) -> I9

Goto (I40, B) -> I47
W → while (C) {B · }

Goto (I40, S) -> I3

Goto (I40, D) -> I4

Goto (I40, I) -> I5

Goto (I40, W) -> I6

Goto (I40, var) -> I7

Goto (I40, if) -> I8

Goto (I40, while) -> I9

Goto (I46, }) -> I48
I → if (C) {B} ·

Goto (I47, }) -> I49
W → while (C) {B} ·
